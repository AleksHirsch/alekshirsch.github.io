{"version":3,"sources":["useGaTracker.ts","Landing/Landing.tsx","About/About.tsx","Contact/Contact.tsx","Photography/Photography.tsx","Error.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useGaTracker","location","useLocation","useState","initialized","setInitialized","useEffect","window","href","includes","ReactGA","initialize","pageview","pathname","search","Hero","styled","div","props","fontSize","Landing","About","Contact","Photography","Error","App","className","path","exact","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAsBeA,EAlBM,WACnB,IAAMC,EAAWC,cACjB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACHC,OAAON,SAASO,KAAKC,SAAS,eACjCC,IAAQC,WAAW,kBACnBN,GAAe,MAEhB,IAEHC,qBAAU,WACJF,GACFM,IAAQE,SAASX,EAASY,SAAWZ,EAASa,UAE/C,CAACV,EAAaH,K,uBChBbc,EAAOC,IAAOC,IAAV,4JAMK,SAACC,GAAD,OAAWA,EAAMC,UAAY,UAO7BC,MAJf,WACE,OAAO,cAACL,EAAD,qBCPMM,MAJf,WACE,OAAO,yCCGMC,MAJf,WACE,OAAO,2CCGMC,MAJf,WACE,OAAO,8CCGMC,MAJf,WACE,OAAO,iDCyBMC,MAnBf,WAGE,OAFAzB,IAGE,qBAAK0B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IAEjC,cAAC,IAAD,CAAOO,KAAK,SAASC,OAAK,EAACC,UAAWR,IACtC,cAAC,IAAD,CAAOM,KAAK,WAAWC,OAAK,EAACC,UAAWP,IACxC,cAAC,IAAD,CAAOK,KAAK,cAAcC,OAAK,EAACC,UAAWN,IAE3C,cAAC,IAAD,CAAOI,KAAK,OAAOE,UAAWL,IAC9B,cAAC,IAAD,CAAUM,GAAG,eCRNC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4c2fc21c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ReactGA from 'react-ga';\n\nconst useGaTracker = () => {\n  const location = useLocation();\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    if (!window.location.href.includes('localhost')) {\n      ReactGA.initialize('UA-199406751-1');\n      setInitialized(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (initialized) {\n      ReactGA.pageview(location.pathname + location.search);\n    }\n  }, [initialized, location]);\n};\n\nexport default useGaTracker;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Hero = styled.div<{ fontSize?: string }>`\n  display: grid;\n  place-items: center;\n  background-color: #353535;\n  color: #f06456;\n  height: 100vh;\n  font-size: ${(props) => props.fontSize || '35px'};\n`;\n\nfunction Landing() {\n  return <Hero>Hello</Hero>;\n}\n\nexport default Landing;\n","import React from 'react';\n\nfunction About() {\n  return <div>About</div>;\n}\n\nexport default About;\n","import React from 'react';\n\nfunction Contact() {\n  return <div>Contact</div>;\n}\n\nexport default Contact;\n","import React from 'react';\n\nfunction Photography() {\n  return <div>Photgraphy</div>;\n}\n\nexport default Photography;\n","import React from 'react';\n\nfunction Error() {\n  return <div>404 not found</div>;\n}\n\nexport default Error;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport useGaTracker from './useGaTracker';\nimport Landing from './Landing/Landing';\nimport About from './About/About';\nimport Contact from './Contact/Contact';\nimport Photography from './Photography/Photography';\nimport Error from './Error';\n\nfunction App() {\n  useGaTracker();\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact component={Landing} />\n\n        <Route path=\"/about\" exact component={About} />\n        <Route path=\"/contact\" exact component={Contact} />\n        <Route path=\"/photgraphy\" exact component={Photography} />\n\n        <Route path=\"/404\" component={Error} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}